{
  "swagger" : "2.0",
  "info" : {
    "version" : "v1",
    "title" : "medibank-api-v1"
  },
  "host" : "api-sit01.digidev.ha-medibank.com",
  "schemes" : [ "https" ],
  "paths" : {
    "/claims" : {
      "get" : {
        "description" : "Returns the claims history for a given person in a policy for a period of time.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "includeProviderDetails",
          "in" : "query",
          "description" : "If provider details are to be returned as part of the result.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "The policy number for which claim history will be retreived.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "practiceTypeCode",
          "in" : "query",
          "description" : "Code to represent the type of services/practices which the provider offers.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The earliest date for correspondence to be included in the request. If omitted, a default value will be calculated based on the current date.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit to the total number of records returned. Default is 10.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "The latest date for correspondence to be included in the request. If omitted, the default value will be today.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeOmsClaims",
          "in" : "query",
          "description" : "If claims submitted via Online channel (OMS, Smartphone etc.) be returned as part of the result.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/claimsHistory"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "post" : {
        "description" : "Create a new Submission of Extras and Pharmacy claims",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "claimRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/claimRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response for /claims POST",
            "schema" : {
              "$ref" : "#/definitions/claimResponse"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/claims/providers" : {
      "get" : {
        "description" : "Service Providers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "suburb",
          "in" : "query",
          "description" : "The suburb or city name of the provider address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "The state of the provider address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "description" : "Filter to select the type service received",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "Searches for a provider with a particular \"ID\"",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "Searches for a provider with a particular last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records per page",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "The page number requested",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "Searches for a provider with a particular first name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeCode",
          "in" : "query",
          "description" : "Practice code to represent the practise type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "postcode",
          "in" : "query",
          "description" : "The postcode of the provider address",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/getProviders"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/claims/providers/{providerID}" : {
      "get" : {
        "description" : "Gets the details of a provider with a given provider id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "providerID",
          "in" : "path",
          "description" : "This is a unique provider number associated with provider (industry standard) provided by Medicare.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of additonal detail to include in the response. Specified as a comma-seperated list of strings.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/getProvider"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "providerID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/claims/serviceItems" : {
      "get" : {
        "description" : "Search Service Items",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "providerId",
          "in" : "query",
          "description" : "The unique number assigned to Provider by Medicare. If provider number is provided, only list of practice and item codes applicable to this provider is to be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "The policy number as context of authorisation/security check. When policy number is provided, list of practices and items relevant to the policy are flagged as \"valid\" in the response.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "practiceTypeCode",
          "in" : "query",
          "description" : "Practice code to represent the practise type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "effectiveDate",
          "in" : "query",
          "description" : "The effective date which will be used to filter the valid service items.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "itemCode",
          "in" : "query",
          "description" : "The unique Industry code which represent the service item code.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "drugName",
          "in" : "query",
          "description" : "The brand/generic name of the pharmacy drug. Note - Wild card search is required on this field. All pharmacy items/drugs which having drug brand name or drug generic name that match with this input will be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of records per page",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page_number",
          "in" : "query",
          "description" : "The page number requested",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/getServiceItems"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/claims/types/{productID}" : {
      "get" : {
        "description" : "Returns the claimable types for the productID specified.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productID",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Product",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "effectiveDate",
          "in" : "query",
          "description" : "The effective date for the claims type request. Defaults to the current date.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product detail response."
          },
          "400" : {
            "description" : "Generic error, invalid request."
          },
          "500" : {
            "description" : "Generic server-error performing request."
          },
          "404" : {
            "description" : "Resource not found."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "productID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/events/{streamName}" : {
      "get" : {
        "description" : "List of events for this stream",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "streamName",
          "in" : "path",
          "description" : "A stream is a collection of related events. A Named Stream has been defined by the user to contain a list of related events. Named Streams are created by POSTing an Event to a Named Stream.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns a list of events.",
            "schema" : {
              "$ref" : "#/definitions/eventList"
            }
          }
        }
      },
      "post" : {
        "description" : "Create a new event in this stream.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "streamName",
          "in" : "path",
          "description" : "A stream is a collection of related events. A Named Stream has been defined by the user to contain a list of related events. Named Streams are created by POSTing an Event to a Named Stream.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Processed. The request was processed successfully.",
            "schema" : {
              "$ref" : "#/definitions/event"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "streamName",
          "in" : "path",
          "description" : "A stream is a collection of related events. A Named Stream has been defined by the user to contain a list of related events. Named Streams are created by POSTing an Event to a Named Stream.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/events/{streamName}/{eventId}" : {
      "get" : {
        "description" : "Get a particular Event by its Id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "eventId",
          "in" : "path",
          "description" : "ID of the Event to look up",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "streamName",
          "in" : "path",
          "description" : "A stream is a collection of related events. A Named Stream has been defined by the user to contain a list of related events. Named Streams are created by POSTing an Event to a Named Stream.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the requested event.",
            "schema" : {
              "$ref" : "#/definitions/eventResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "eventId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "streamName",
          "in" : "path",
          "description" : "A stream is a collection of related events. A Named Stream has been defined by the user to contain a list of related events. Named Streams are created by POSTing an Event to a Named Stream.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members" : {
      "get" : {
        "description" : "Endpoint to retrieve member info associated with the logged in user. If the user belongs to multiple memberships, then an array of membership details will be returned.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/unsubscribe" : {
      "put" : {
        "description" : "Invoke an unsubscribe event via a token",
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Unsubscribe successful"
          },
          "400" : {
            "description" : "Generic request error."
          },
          "500" : {
            "description" : "Generic server-side error."
          },
          "401" : {
            "description" : "Unauthenticated user."
          },
          "403" : {
            "description" : "Unauthorised user."
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}" : {
      "get" : {
        "description" : "Resource representing a specific member identified by a unique ID.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "The sub-resources to include in the response.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Retrieve an individual member by Id."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/accounts" : {
      "get" : {
        "description" : "Get a list of Accounts associated with this Member.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Return a list of Accounts associated with this member, potentially linked to policies.",
            "headers" : {
              "ETag" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/accounts/benefits" : {
      "post" : {
        "description" : "POST Method for /members/{MemberID}/accounts/benefits",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "accountBenefitsRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/accountBenefitsRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The account has been created successfully."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/accounts/directdebit" : {
      "post" : {
        "description" : "Create direct debit account",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "accountDirectDebitRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/accountDirectDebitRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The debit account has been successfully created"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/accounts/directdebit/creditCard" : {
      "post" : {
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "directDebitCreditCardRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/directDebitCreditCardRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The debit account has been successfully created"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/accounts/paymentFrequency" : {
      "post" : {
        "description" : "Update the frequency of Payments",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updatePaymentFrequencyRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/updatePaymentFrequencyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The payment frequency has been successfully updated."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/contact" : {
      "put" : {
        "description" : "Update membership information. If multiple contact details are supplied, each will be updated. A contact field with an empty object results in that field being deleted from the current record.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "Entity tags (ETags) are a common way to manage caching and concurrency control. For the Medibank API we are primarily concerned with concurrency control. The ETag is a list of name value pairs (usually only one pair) which indicates the version of the underlying entity/entities represented by the requested resource. In some cases, a user agent which modifies the resource(s) via a PUT must specify the entity versions that the modification applies to."
              }
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/correspondence" : {
      "get" : {
        "description" : "Get a list of correspondence items between Medibank and the Member. Must be qualified by a date-range for the request.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyId",
          "in" : "query",
          "description" : "A policy id to filter correspondence by.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The earliest date for correspondence to be included in the request. If omitted, a default value will be calculated based on the current date.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit to the total number of records returned. Default is 10.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "The latest date for correspondence to be included in the request. If omitted, the default value will be today.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeCode",
          "in" : "query",
          "description" : "A comma-delimited list of letter types to be retrieved.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/correspondenceList"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/correspondence/request" : {
      "post" : {
        "description" : "Update request.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "correspondenceRequestRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/correspondenceRequestRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request has been accepted."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/correspondence/{CorrespondenceID}" : {
      "get" : {
        "description" : "GET associated Document and Inserts for a Correspondence ID.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "description" : "Unique ID for Correspondance",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "disableContent",
          "in" : "query",
          "description" : "Exclude Insert content from being returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePreviews",
          "in" : "query",
          "description" : "Exclude Insert preview/banners from being returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/correspondence"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/correspondence/{CorrespondenceID}/file" : {
      "get" : {
        "description" : "Downloads the correspondence document as a binary stream. Ideally, check the expected filetype through a meta request before using this resource, as the document may not always be in the form of a file.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "description" : "Unique ID for Correspondance",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Get success",
            "headers" : {
              "Content-Disposition" : {
                "type" : "string"
              }
            }
          },
          "415" : {
            "description" : "The requested document is not of a type suitable for direct download."
          },
          "404" : {
            "description" : "The requested document was not found."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/correspondence/{CorrespondenceID}/insert/{InsertID}" : {
      "get" : {
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "description" : "Unique ID for Correspondance",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disableContent",
          "in" : "query",
          "description" : "Exclude Insert content from being returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePreviews",
          "in" : "query",
          "description" : "Exclude Insert preview/banners from being returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/correspondenceInsert"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/correspondence/{CorrespondenceID}/meta" : {
      "get" : {
        "description" : "Retrieve metadata only for a Correspondence Document. Actual document and insert content data will not be included, with the exception of Insert Banner/Previews for UX purposes. To exclude Banners as well, specify the exclusion in the request parameters.\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "description" : "Unique ID for Correspondance",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "disablePreviews",
          "in" : "query",
          "description" : "Exclude Insert preview/banners from being returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/correspondence"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "CorrespondenceID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/memberTypes" : {
      "get" : {
        "description" : "Retrieve an array of all member types for policies against an ID.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyId",
          "in" : "query",
          "description" : "A specific policy number to check member types against.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/memberTypes"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/members/{MemberID}/youngadults" : {
      "post" : {
        "description" : "Validates a policy by membership number, name and date of birth. This method of validation is for use outside of the OMS / Okta authentication process, and will only grant priveleges to call the PUT method on this Young Adults endpoint. This call will return a payload of restricted young adult data if validation is successful and that information is available.\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "youngAdultsValidatePolicyRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/youngAdultsValidatePolicyRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/youngAdultsValidatePolicyResponse"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              }
            }
          },
          "401" : {
            "description" : "401 response",
            "schema" : {
              "$ref" : "#/definitions/youngAdultsValidatePolicyErrorResponse"
            }
          },
          "403" : {
            "description" : "403 response"
          },
          "415" : {
            "description" : "415 response"
          }
        }
      },
      "put" : {
        "description" : "Update young adults contact information, their student and living at home status.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide the relevant entity type and version IDs for which the update is intended. If the version ID does not match the current entity version in the back-end, then a 412 error status will be returned and the update will not be applied.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "youngAdultsUpdateRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/youngAdultsUpdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Generic error, invalid request.",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          },
          "401" : {
            "description" : "401 response"
          },
          "412" : {
            "description" : "412 response"
          },
          "500" : {
            "description" : "Generic server-error performing request",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          },
          "403" : {
            "description" : "403 response"
          },
          "404" : {
            "description" : "Resource not found."
          }
        },
        "security" : [ {
          "YoungAdultJWTAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "MemberID",
          "in" : "path",
          "description" : "A unique ID that identifies a specific member.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Expose-Headers" : {
                "type" : "string"
              },
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/payments" : {
      "get" : {
        "description" : "Retrieve a schedule of payments either made or required (future) for a specified policy.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "A limit to the total number of records returned. Default is 10.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "The latest date for correspondence to be included in the request. If omitted, the default value will be today.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "query",
          "description" : "The unique ID of a Medibank policy.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "from",
          "in" : "query",
          "description" : "The earliest date for correspondence to be included in the request. If omitted, a default value will be calculated based on the current date.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful return of an array of payments."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "post" : {
        "description" : "Make a payment with a pre-tokenized credit card",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "The payment was successfully processed and a payment record created.\\nNote that does not mean that the payment itself was successful; rather just that the payment was processed by the system and a new payment record\\ncreated under this resource.",
            "schema" : {
              "$ref" : "#/definitions/paymentResponse"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/payments/token" : {
      "post" : {
        "description" : "Request token for registering a payment or a credit card with payments gateway.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "tokenRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/tokenRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The response includes a token for use with the target payments API.",
            "schema" : {
              "$ref" : "#/definitions/tokenResponse"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies" : {
      "get" : {
        "description" : "Get a list of Policies associated with the specified Member.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "memberId",
          "in" : "query",
          "description" : "Return a list of Policies associated with this member.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/getPolicyResponse"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}" : {
      "get" : {
        "description" : "Gets the details of the policy with the given policy number for the member whose BPID is provided in the authentication details",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "include",
          "in" : "query",
          "description" : "List of associated resources to include in the response. Specified as a comma-seperated list of strings.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/amountToPay" : {
      "get" : {
        "description" : "Calculates the amounts needed to pay this policy's cover up to a given date(s)",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "until",
          "in" : "query",
          "description" : "Enter a future date(s) and obtain the amount payable for cover until that date(s). Multiple\\ndates are comma separated.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/amountToPay"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/ausgovRebate" : {
      "put" : {
        "description" : "Update the agr information for this policy.An agr field with an empty object results in the field being deleted from the current record.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ausgovRebate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ausgovRebate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/benefitLimits" : {
      "get" : {
        "description" : "Returns the benefit limits of a business partner for a given policy and effective date.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "memberId",
          "in" : "query",
          "description" : "The memberId for which benefit limits will be retreived.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "presentationLayerGroupCode",
          "in" : "query",
          "description" : "A comma-delimited list of coverage group codes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "effectiveDate",
          "in" : "query",
          "description" : "The effective date of policy which needs to be retrieved.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/benefitLimits"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/bonusBalances" : {
      "get" : {
        "description" : "Returns the runtime balances for all types of bonus (Package bonus, Flexi bonus etc.) for the logged in member or alternatively the memberId provided.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "memberId",
          "in" : "query",
          "description" : "The memberId for which bonusBalances will be retreived.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/bonusBalances"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/cardRequest" : {
      "post" : {
        "description" : "Creates a request for one or more cards for this policy. Note: Number of cards is optional and defaults to one.\n",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "cardRequestRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/cardRequestRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Request has been accepted."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/excess" : {
      "get" : {
        "description" : "Get a list of possible excess levels for the current product on this policy",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "put" : {
        "description" : "Updates the excess for a given policy",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "simulate",
          "in" : "query",
          "description" : "Allows to simulate the effect of updating an excess, without actually applying the change.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "policyExcess",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/policyExcess"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/premiums" : {
      "get" : {
        "description" : "Returns the premium payable for this policy taking into account the policy details such as state, LHC, applicant type etc. Note that this simply selects the \"brochure price\" from the catalog by filtering on these criteria. It is not a simulation of what the user will actually pay; rather the ongoing premium they will pay if there are not extenuating circumstances such as account freezes or extra deductions etc. One premium will be returned for each of the available\n",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "effectiveDate",
          "in" : "query",
          "description" : "Date that the premiums should be calculated at. Defaults to the current date.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/premiums"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/policies/{policyNumber}/registerAusgovRebate" : {
      "post" : {
        "description" : "Register an AGR for this policy.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "When this header is specified in the API, then user agents making an update to a resource via a PUT must provide\\nthe relevant entity type and version IDs for which the update is intended. If the version ID does not match the\\ncurrent entity version in the back-end, then a 412 error status will be returned and the update will not be applied.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "agrRegistrationRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/agrRegistrationRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Application accepted.",
            "schema" : {
              "$ref" : "#/definitions/agrRegistrationResponse"
            }
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "policyNumber",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Policy",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/products/{productID}" : {
      "get" : {
        "description" : "Returns the detail of the Medibank Product catalogue for the productID specified.",
        "parameters" : [ {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "productID",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Product",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "effectiveDate",
          "in" : "query",
          "description" : "The effective date for the product catalouge request. Defaults to the current date.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "productID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/products/{productID}/coverages" : {
      "get" : {
        "description" : "Returns coverages for a Medibank Product of productID",
        "parameters" : [ {
          "name" : "productID",
          "in" : "path",
          "description" : "Unique ID for a given Medibank Product",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "effectiveDate",
          "in" : "query",
          "description" : "The effective date for the coverages request. Defaults to the current date.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Coverages detail."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "productID",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/reference/bank" : {
      "get" : {
        "description" : "Retrieving information regarding a bank",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bsb",
          "in" : "query",
          "description" : "A Bank State Branch (often referred to as \\\"BSB\\\") is the name used in Australia for a bank code, which is a branch identifier.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Information regarding a bank"
          },
          "400" : {
            "description" : "Generic error, invalid request."
          },
          "500" : {
            "description" : "Generic server-error performing request."
          },
          "404" : {
            "description" : "Resource not found."
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/reference/memberTypes" : {
      "get" : {
        "description" : "Retrieve an array of all possible member types.",
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "An array of all possible member types."
          },
          "400" : {
            "description" : "Generic error, invalid request."
          },
          "500" : {
            "description" : "Generic server-error performing request."
          },
          "404" : {
            "description" : "Resource not found."
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/reference/{domain}" : {
      "get" : {
        "description" : "Returns the reference data for the requested \"domain\".",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "A dot notation selector used to filter the data returned. If not specified ALL the data is returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "description" : "Retrieve the following types of reference data:\n  - requestCardReasons\n  - commsCategories\n  - commsChannels\n  - postalAddressDeliveryTypes\n  - incomeScales\n  - memberAges\n  - incomeRanges\n  - limitRuleDescriptions\n  - agrs\n  - countries\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Reference data response."
          },
          "400" : {
            "description" : "Generic error, invalid request."
          },
          "500" : {
            "description" : "Generic server-error performing request."
          },
          "404" : {
            "description" : "Resource not found."
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "domain",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/sessions" : {
      "post" : {
        "description" : "Creates or validates a new session for a user using a one-time token.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "sessionsUserCredentials",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/sessionsUserCredentials"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Session created. Note: If the \"r1\" JSON object is present in the response body then the Session is created in \"Old\" OMS/R1.\n",
            "schema" : {
              "$ref" : "#/definitions/sessionsLoginResponse"
            },
            "headers" : {
              "APISessionToken" : {
                "type" : "string",
                "description" : "Base64 encoded JWT token containing session details"
              },
              "Location" : {
                "type" : "string",
                "description" : "URL of the created session."
              }
            }
          },
          "401" : {
            "description" : "Unauthorized. Either the user is not a valid user or they are in an incorrect state (e.g. Email not verified) The error code in the body."
          },
          "403" : {
            "description" : "Forbidden. The user credentials are valid however authorisation has been denied. The error code and description is contained in the error body. Possible errors include:\n  Code: ERR_00018\n  Description: User under investigation\n  Code: ERR_00019\n  Description: User has opted out of OMS\n  Code: ERR_00021\n  Description: No active policy found for the user where he/she is insured\n  Code: ERR_00037\n  Description: User has not verified email address\n  Code: ERR_00038\n  Description: User has valid R1 credentials, but needs to re-register\n"
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/sessions/{id}" : {
      "get" : {
        "description" : "Validate and refresh a session.",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "A unique ID that identifies a specific session.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Session is validated."
          },
          "401" : {
            "description" : "Unauthorized"
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "delete" : {
        "description" : "Closes a session",
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "A unique ID that identifies a specific session.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "401" : {
            "description" : "Unauthenticated user. Please log in."
          },
          "204" : {
            "description" : "No Content"
          },
          "403" : {
            "description" : "User is not authorized for this resource and operation."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "description" : "Get the loginId for a user.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "policyNum",
          "in" : "query",
          "description" : "The user's policy number.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "The user's first name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "dob",
          "in" : "query",
          "description" : "The user's date of birth.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "The user's last name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns user credentials for the Member matching the request parameters.",
            "schema" : {
              "$ref" : "#/definitions/getUsernameResponse"
            }
          }
        }
      },
      "post" : {
        "description" : "Register a new user.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "registerUserRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/registerUserRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "The user has been created successfully.",
            "headers" : {
              "Location" : {
                "type" : "string",
                "description" : "The URL of the created user."
              }
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/recoverUsername" : {
      "post" : {
        "description" : "Request to recover a username. POST method indicates side-effects.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "recoverUsernameRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/recoverUsernameRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The recoverUsername request has been processed.",
            "schema" : {
              "$ref" : "#/definitions/getUsernameResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}" : {
      "get" : {
        "description" : "Retrieve an individual user by Id.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/getUserResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/activate" : {
      "post" : {
        "description" : "Activates a newly created user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "activateUserRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/activateUserRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The activate user request has been accepted. The response body will provide available next steps which may be to login or set a credential.",
            "schema" : {
              "$ref" : "#/definitions/activateUserResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/changePassword" : {
      "post" : {
        "description" : "Synchronously change the password for this user to the specified new password.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "changePasswordRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/changePasswordRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request has been accepted."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/changeUsername" : {
      "post" : {
        "description" : "Request to change the user's username.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "userId",
          "in" : "header",
          "description" : "The userID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "bpId",
          "in" : "header",
          "description" : "The Business Partner ID retrieved via Okta.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sessionId",
          "in" : "header",
          "description" : "The Session ID generated during login.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "changeUsernameRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/changeUsernameRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request has been accepted."
          }
        },
        "security" : [ {
          "DefaultAuthorizer" : [ ]
        } ]
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/checkdob" : {
      "put" : {
        "description" : "Check the month and year of birth against user details for reset password security.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "dob",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/dob"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Valid user."
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/confirmEmail" : {
      "post" : {
        "description" : "Request to confirm the user email address.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "confirmEmailRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/confirmEmailRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The confirm email request has been processed.",
            "schema" : {
              "$ref" : "#/definitions/confirmEmailResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/credentials" : {
      "post" : {
        "description" : "Sets a credential for a user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "credentialsRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/credentialsRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The set credentails request has been processed. The response body will optionally contain next steps",
            "schema" : {
              "$ref" : "#/definitions/credentialsResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/recoverPassword" : {
      "post" : {
        "description" : "Request password recovery for this user via an \"out of band\" process.\n",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "recoverPasswordRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/recoverPasswordRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "The recover password request has been accepted.",
            "schema" : {
              "$ref" : "#/definitions/recoverPasswordResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/resetPassword" : {
      "post" : {
        "description" : "Request to reset the credential for the user.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "resetPasswordRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/resetPasswordRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request has been accepted.",
            "schema" : {
              "$ref" : "#/definitions/resetPasswordResponse"
            }
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "/users/{username}/verifyToken" : {
      "put" : {
        "description" : "Allows the token the user receives via email to be validated prior to prompting the user for additional information.",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "trackingId",
          "in" : "header",
          "description" : "Consumer system's tracking ID for this request (if any). This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "description" : "A unique username",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "creationTime",
          "in" : "header",
          "description" : "The time this message was created by the invoking system. This is optional and purely for troubleshooting / analysis purposes.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Forwarded-For",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "header",
          "description" : "Unique ID for the API transaction. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestamp",
          "in" : "header",
          "description" : "The time this message was received by the API Gateway. Generated by the API Gateway not the consumer system.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "verifyTokenRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/verifyTokenRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Verified. The token was verified successfully."
          }
        }
      },
      "options" : {
        "parameters" : [ {
          "name" : "Access-Control-Request-Method",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Access-Control-Request-Headers",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "username",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "YoungAdultJWTAuthorizer" : {
      "type" : "apiKey",
      "name" : "APIFWACToken",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "custom"
    },
    "DefaultAuthorizer" : {
      "type" : "apiKey",
      "name" : "APISessionToken",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "custom"
    }
  },
  "definitions" : {
    "eventResponse" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "eventRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "id" : {
          "type" : "string"
        }
      },
      "description" : "Response from an EventLog create."
    },
    "claimsItem" : {
      "type" : "object",
      "properties" : {
        "benefitAmount" : {
          "type" : "number"
        },
        "assessments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/itemAssessment"
          }
        },
        "code" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer"
        },
        "serviceDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "drugGenericName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "packNumberSize" : {
          "type" : "string"
        },
        "toothId" : {
          "type" : "string"
        },
        "scriptNumber" : {
          "type" : "string"
        },
        "drugBrandName" : {
          "type" : "string"
        },
        "drugType" : {
          "type" : "string"
        },
        "drugStrength" : {
          "type" : "string"
        },
        "bonusAmount" : {
          "type" : "number"
        },
        "prescribingDoctor" : {
          "type" : "string"
        },
        "chargeAmount" : {
          "type" : "number"
        },
        "id" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "paymentSchedule" : {
      "type" : "object",
      "properties" : {
        "endDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "payments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/payment"
          }
        },
        "limit" : {
          "type" : "integer"
        },
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "startDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        }
      },
      "title" : "Payment Schedule",
      "description" : "A list of payments for a policy within a specified time interval."
    },
    "pharmacyItemDetail" : {
      "type" : "object",
      "properties" : {
        "effectiveEndDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "code" : {
          "type" : "string"
        },
        "strength" : {
          "type" : "string"
        },
        "effectiveStartDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "packNumberSize" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "memberTypes" : {
      "type" : "object",
      "properties" : {
        "types" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      },
      "description" : "A list of all possible Member Types"
    },
    "youngAdultsValidatePolicyRequest" : {
      "type" : "object",
      "required" : [ "dateOfBirth", "firstName", "lastName", "membershipNumber" ],
      "properties" : {
        "membershipNumber" : {
          "type" : "string",
          "description" : "Policy ID to verify and retrieve."
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name of the authorised member."
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the authorised member."
        },
        "dateOfBirth" : {
          "type" : "string",
          "description" : "Date String in the format of 'yyyy-mm-dd'.",
          "pattern" : "^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$"
        },
        "token" : {
          "type" : "string",
          "description" : "Captcha token for Google verification. Beep-boop, I'm not a robot.\n"
        }
      },
      "title" : "Young Adults - Validate Policy Request",
      "description" : "POST request payload for validating a member and policy outside of an OMS login context.\n"
    },
    "payment" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "transactionType" : {
          "type" : "string"
        },
        "coverageStartDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "dueDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "paymentMethod" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "transactionDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "type" : {
          "type" : "string",
          "default" : "payments"
        },
        "paymentAmount" : {
          "type" : "number"
        },
        "coverageEndDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"
        },
        "status" : {
          "type" : "string"
        }
      },
      "title" : "Payment"
    },
    "policyExcess" : {
      "type" : "object",
      "required" : [ "code", "description" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "subsidised" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        },
        "marketable" : {
          "type" : "boolean"
        }
      },
      "description" : "A Policy Excess"
    },
    "practiceItem" : {
      "type" : "object",
      "properties" : {
        "pharmacyItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/pharmacyItem"
          }
        },
        "coPaymentAmount" : {
          "type" : "number"
        },
        "serviceItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/serviceItem"
          }
        },
        "practiceType" : {
          "$ref" : "#/definitions/practiceType"
        }
      }
    },
    "suspension" : {
      "type" : "object",
      "properties" : {
        "reason" : {
          "type" : "string"
        },
        "suspendId" : {
          "type" : "string"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "claimResponseItemAssessment" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "correspondenceInsert" : {
      "type" : "object",
      "required" : [ "filename", "id", "name", "pages" ],
      "properties" : {
        "preview" : {
          "$ref" : "#/definitions/correspondenceContent"
        },
        "filename" : {
          "type" : "string"
        },
        "pages" : {
          "type" : "integer"
        },
        "clientKey" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "disabled" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "content" : {
          "$ref" : "#/definitions/correspondenceContent"
        }
      }
    },
    "getProviders" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "multiple" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "providers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/provider"
          }
        }
      },
      "description" : "Service Provider List"
    },
    "accountBenefitsRequest" : {
      "type" : "object",
      "properties" : {
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "account" : {
          "$ref" : "#/definitions/paymentAccount"
        }
      },
      "description" : "Structure to register an account for benefit payment from a Policy"
    },
    "phone" : {
      "type" : "object",
      "properties" : {
        "phoneNumber" : {
          "type" : "string"
        },
        "countryCode" : {
          "type" : "string"
        }
      }
    },
    "dob" : {
      "type" : "object",
      "properties" : {
        "month" : {
          "type" : "string"
        },
        "year" : {
          "type" : "string"
        },
        "day" : {
          "type" : "string"
        }
      },
      "description" : "Activate a User"
    },
    "ausgovRebate" : {
      "type" : "object",
      "properties" : {
        "agrPercentage" : {
          "type" : "string"
        },
        "registrationStatus" : {
          "type" : "string"
        },
        "registrationEffectiveToDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "registrationEffectiveFromDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "agrIncomeTier" : {
          "$ref" : "#/definitions/agrIncomeTier"
        },
        "effectiveAGR" : {
          "type" : "string"
        }
      }
    },
    "resourceLink" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "_link" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "paymentAccount" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "ignoreThisProperty_1" : {
          "$ref" : "#/definitions/bankAccount"
        },
        "ignoreThisProperty_4" : {
          "$ref" : "#/definitions/chequeAccount"
        },
        "ignoreThisProperty_3" : {
          "$ref" : "#/definitions/payrollAccount"
        },
        "ignoreThisProperty_2" : {
          "$ref" : "#/definitions/creditCardAccount"
        },
        "type" : {
          "type" : "string",
          "default" : "accounts"
        }
      },
      "title" : "paymentAccount",
      "description" : "Abstract account to be extended by concrete types such as bankAccount and creditCardAccount."
    },
    "coverTypeVersionLimitGroup" : {
      "type" : "object",
      "properties" : {
        "coverTypeVersionLimitGroupCode" : {
          "type" : "string"
        },
        "remainingAvailableLimitAmount" : {
          "type" : "number"
        },
        "equityRuleCode" : {
          "type" : "string"
        },
        "limitAmount" : {
          "type" : "number"
        },
        "equityYear" : {
          "type" : "integer"
        },
        "equityAmount" : {
          "type" : "number"
        },
        "limitRuleCode" : {
          "type" : "string"
        },
        "availableLimitAmount" : {
          "type" : "number"
        },
        "equityRuleCodeDescription" : {
          "type" : "string"
        }
      }
    },
    "credentialsRequest" : {
      "type" : "object",
      "required" : [ "password", "tokenID" ],
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "tokenID" : {
          "type" : "string"
        }
      },
      "description" : "Set the Credential for a User"
    },
    "getUserResponse" : {
      "type" : "object",
      "properties" : {
        "dayOfBirth" : {
          "type" : "integer"
        },
        "name" : {
          "$ref" : "#/definitions/name"
        },
        "username" : {
          "type" : "string"
        }
      },
      "description" : "Activate a User"
    },
    "youngAdultsValidatePolicyErrorResponse" : {
      "type" : "object",
      "required" : [ "message" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "The error message"
        }
      },
      "title" : "Young Adults - Validate Policy Error Response.",
      "description" : "The response format when Young Adult policy validation fails."
    },
    "document" : {
      "type" : "object",
      "required" : [ "id", "name", "pages", "published" ],
      "properties" : {
        "pages" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "published" : {
          "type" : "string"
        },
        "content" : {
          "$ref" : "#/definitions/correspondenceContent"
        }
      }
    },
    "confirmEmailRequest" : {
      "type" : "object",
      "required" : [ "tokenID" ],
      "properties" : {
        "tokenID" : {
          "type" : "string"
        }
      },
      "description" : "Confirm Email Request"
    },
    "commonCoverage" : {
      "type" : "object",
      "properties" : {
        "commonCoverageName" : {
          "type" : "string"
        },
        "commonCoverageCode" : {
          "type" : "string"
        },
        "waitingRuleCodeDescription" : {
          "type" : "string"
        },
        "waitingPeriodApplicableIndicator" : {
          "type" : "boolean"
        },
        "waitingRuleCode" : {
          "type" : "string"
        }
      }
    },
    "sessionsLoginResponse" : {
      "type" : "object",
      "properties" : {
        "customerId" : {
          "type" : "string"
        },
        "sessionId" : {
          "type" : "string"
        },
        "r1" : {
          "type" : "object",
          "properties" : {
            "password" : {
              "type" : "string"
            },
            "username" : {
              "type" : "string"
            }
          }
        }
      },
      "title" : "Sessions API - Login response"
    },
    "premium" : {
      "type" : "object",
      "required" : [ "paymentAmount" ],
      "properties" : {
        "coverPeriod" : {
          "type" : "string"
        },
        "coverageStartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "agrAmount" : {
          "type" : "number"
        },
        "discountAmount" : {
          "type" : "number"
        },
        "paymentAmount" : {
          "type" : "number"
        },
        "deductionDay" : {
          "type" : "string"
        },
        "coverageEndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "baseAmount" : {
          "type" : "number"
        },
        "lhcAmount" : {
          "type" : "number"
        }
      },
      "description" : "Policy premium available to the member"
    },
    "cardRequestRequest" : {
      "type" : "object",
      "required" : [ "requestReason" ],
      "properties" : {
        "requestReason" : {
          "type" : "string"
        },
        "numberOfCards" : {
          "type" : "integer"
        }
      },
      "description" : "Request a new card(s) for a policy"
    },
    "paymentOption" : {
      "type" : "object",
      "properties" : {
        "datePaidTo" : {
          "type" : "string",
          "format" : "date"
        },
        "paymentDate" : {
          "type" : "string",
          "format" : "date"
        },
        "paymentAmount" : {
          "type" : "number"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date"
        }
      }
    },
    "policyPayment" : {
      "type" : "object",
      "properties" : {
        "payRemainingAmount" : {
          "type" : "boolean"
        },
        "shareAmount" : {
          "type" : "string"
        },
        "account" : {
          "$ref" : "#/definitions/paymentAccount"
        },
        "sharePercentage" : {
          "type" : "string"
        }
      }
    },
    "event" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "sourceTime" : {
          "type" : "string",
          "description" : "The source timestamp of the event - RFC3339 Nanosecond format."
        },
        "context" : {
          "type" : "object",
          "description" : "Unstructured additional properties associated with this event type.",
          "properties" : { }
        },
        "id" : {
          "type" : "string",
          "description" : "Unique ID for this event, generated by Eventlog."
        },
        "tag" : {
          "type" : "string",
          "description" : "The tag (or name) of the event, assigned by the event source."
        },
        "source" : {
          "type" : "string",
          "description" : "The source of the event, assigned by the event source."
        },
        "entityRef" : {
          "type" : "string",
          "description" : "A reference to an entity or resource associated with the event."
        },
        "type" : {
          "type" : "string",
          "default" : "events"
        }
      },
      "description" : "Eventlog Structure"
    },
    "recoverPasswordResponse" : {
      "type" : "object",
      "required" : [ "username" ],
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "description" : "Recover Password Response - only next href and username are used"
    },
    "product" : {
      "type" : "object",
      "properties" : {
        "coverage" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/coverage"
          }
        },
        "package" : {
          "type" : "boolean"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "name" : {
          "type" : "string"
        },
        "scale" : {
          "type" : "string"
        },
        "availability" : {
          "type" : "string"
        },
        "excessCode" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "default" : "products"
        },
        "lifeCycle" : {
          "type" : "string"
        },
        "paymentCombinations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/paymentCombination"
          }
        }
      },
      "title" : "Product"
    },
    "serviceItem" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "isValidForPolicy" : {
          "type" : "boolean"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "address" : {
      "type" : "object",
      "properties" : {
        "townName" : {
          "type" : "string"
        },
        "countryCode" : {
          "type" : "string"
        },
        "addressLine1" : {
          "type" : "string"
        },
        "deliveryPointID" : {
          "type" : "string"
        },
        "addressLine2" : {
          "type" : "string"
        },
        "postCode" : {
          "type" : "string"
        },
        "stateCode" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "addressLine3" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "serviceDeliveryType" : {
          "type" : "string"
        }
      },
      "description" : "Address"
    },
    "agrApplicantMember" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/memberRelationship"
          }
        },
        "individual" : {
          "$ref" : "#/definitions/individual"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "applicantStartDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "organization" : {
          "$ref" : "#/definitions/organization"
        },
        "contact" : {
          "$ref" : "#/definitions/contact"
        },
        "memberTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "default" : "members"
        },
        "dependantIndicator" : {
          "type" : "string"
        },
        "applicantEndDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }
      },
      "description" : "A Member"
    },
    "correspondence" : {
      "type" : "object",
      "required" : [ "document", "id" ],
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "document" : {
          "$ref" : "#/definitions/document"
        },
        "id" : {
          "type" : "string"
        },
        "inserts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/correspondenceInsert"
          }
        }
      }
    },
    "lhc" : {
      "type" : "object",
      "properties" : {
        "previousHospitalEndDate" : {
          "type" : "string"
        },
        "concessionCode" : {
          "type" : "string"
        },
        "dwhc" : {
          "type" : "string"
        },
        "paidHospitalDays" : {
          "type" : "string"
        },
        "lhcPercentage" : {
          "type" : "string"
        },
        "concessionDiscountCode" : {
          "type" : "string"
        },
        "baseCAE" : {
          "type" : "string"
        },
        "effectiveCAE" : {
          "type" : "string"
        }
      }
    },
    "correspondenceItem" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "description" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "channelId" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "typeCode" : {
          "type" : "string"
        }
      }
    },
    "premiums" : {
      "type" : "object",
      "properties" : {
        "current" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/premium"
          }
        },
        "future" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/premium"
          }
        }
      },
      "description" : "Cover premium amounts for given payment frequencies"
    },
    "chequeAccount" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "payByCheque" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "getUsernameResponse" : {
      "type" : "object",
      "required" : [ "username" ],
      "properties" : {
        "errorCode" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "description" : "Request a user's username"
    },
    "accountDirectDebitRequest" : {
      "type" : "object",
      "properties" : {
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "account" : {
          "$ref" : "#/definitions/paymentAccount"
        }
      },
      "description" : "Structure to register an account for Direct Debits into a Policy"
    },
    "applicant" : {
      "type" : "object",
      "properties" : {
        "address" : {
          "$ref" : "#/definitions/address"
        },
        "individual" : {
          "$ref" : "#/definitions/individual"
        },
        "applicantStartDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "memberIndicator" : {
          "type" : "string"
        },
        "applicantEndDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }
      }
    },
    "activateUserRequest" : {
      "type" : "object",
      "required" : [ "tokenID" ],
      "properties" : {
        "tokenID" : {
          "type" : "string"
        }
      },
      "description" : "Activate a User"
    },
    "resetPasswordRequest" : {
      "type" : "object",
      "required" : [ "tokenID" ],
      "properties" : {
        "tokenID" : {
          "type" : "string"
        }
      },
      "description" : "Request to Reset a User's Password"
    },
    "submitClaimItem" : {
      "type" : "object",
      "properties" : {
        "pharmacyScriptNumber" : {
          "type" : "string"
        },
        "code" : {
          "type" : "string"
        },
        "quantity" : {
          "type" : "integer"
        },
        "prescribingDoctor" : {
          "type" : "string"
        },
        "chargeAmount" : {
          "type" : "number"
        },
        "dateOfService" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "toothId" : {
          "type" : "string"
        }
      }
    },
    "payrollAccount" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "employerRef" : {
          "$ref" : "#/definitions/resource"
        },
        "employerName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "employeeDepartment" : {
          "type" : "string"
        },
        "employeeNumber" : {
          "type" : "string"
        }
      }
    },
    "organization" : {
      "type" : "object",
      "properties" : {
        "corporateName" : {
          "type" : "string"
        },
        "tradingName" : {
          "type" : "string"
        },
        "industrySector" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "Organization",
      "description" : "Representation of an organization as a Member or Agreement Party."
    },
    "creditCardAccount" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "paymentCardID" : {
          "type" : "string"
        },
        "cardExpiry" : {
          "type" : "string"
        },
        "cardHolderName" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "cardRefID" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "cardToken" : {
          "type" : "string"
        }
      }
    },
    "youngAdultsForm" : {
      "type" : "object",
      "required" : [ "age", "etag", "id" ],
      "properties" : {
        "gender" : {
          "type" : "string",
          "description" : "The child's gender.",
          "enum" : [ "MALE", "FEMALE", "UNKNOWN" ]
        },
        "hasMobile" : {
          "type" : "boolean",
          "description" : "Does the child already have a mobile phone number set?"
        },
        "mobile" : {
          "type" : "string",
          "description" : "The mobile phone number of the child.",
          "pattern" : "^(04|05)[0-9]{8}$"
        },
        "registered" : {
          "type" : "boolean",
          "description" : "Is the child registered for OMS?"
        },
        "birthDate" : {
          "type" : "string",
          "description" : "The child's date of birth."
        },
        "intent" : {
          "type" : "string",
          "description" : "The intent of the parent to remove the child from the policy, or keep them on with loading.",
          "enum" : [ "KEEP", "REMOVE" ]
        },
        "declaredBy" : {
          "type" : "string",
          "description" : "The BPID of the member who performed the last update."
        },
        "hasEmail" : {
          "type" : "boolean",
          "description" : "Does the child already have an email address set?"
        },
        "lastUpdate" : {
          "type" : "string",
          "description" : "The date and time of when this child's information was last updated (e.g. 2015-06-25T09:42:00.517Z).",
          "pattern" : "^([0-9]{4})-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([0-1][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9](\\.[0-9]+)?(Z|[+-](0[0-9]|1[0-9]|2[0-4]):[0-5][0-9])?$"
        },
        "name" : {
          "type" : "string",
          "description" : "The child's first name (optional)."
        },
        "etag" : {
          "type" : "string",
          "description" : "eTag value for the child's member details."
        },
        "id" : {
          "type" : "string",
          "description" : "BPID of the child."
        },
        "age" : {
          "type" : "integer",
          "description" : "The child's age."
        },
        "isStudent" : {
          "type" : "boolean",
          "description" : "Is the child a student?"
        },
        "email" : {
          "type" : "string",
          "description" : "The child's email address."
        }
      },
      "title" : "Young Adults - Form Data.",
      "description" : "Form data payload used to capture required information on a Young Adult member.\n"
    },
    "directDebitCreditCardRequest" : {
      "type" : "object",
      "properties" : {
        "policyId" : {
          "type" : "string"
        },
        "bpId" : {
          "type" : "string"
        },
        "paymentFrequency" : {
          "type" : "string"
        },
        "cardToken" : {
          "type" : "string"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date"
        },
        "deductionDay" : {
          "type" : "string"
        }
      },
      "description" : "Structure to register a credit card payment method and optionally set payment frequency in a async manner"
    },
    "paymentCombination" : {
      "type" : "object",
      "properties" : {
        "paymentMethod" : {
          "type" : "string"
        },
        "paymentFrequency" : {
          "type" : "string"
        }
      }
    },
    "amountToPay" : {
      "type" : "object",
      "properties" : {
        "current" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/paymentOption"
          }
        },
        "future" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/paymentOption"
          }
        }
      },
      "description" : "Possible payments to pay cover up to a particular date"
    },
    "eventList" : {
      "type" : "object",
      "properties" : {
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/event"
          }
        }
      }
    },
    "claimResponse" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "totalPaidAmount" : {
          "type" : "number"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "totalBonusPaidAmount" : {
          "type" : "number"
        },
        "submissionDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "type" : {
          "type" : "string",
          "default" : "claim"
        },
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "totalBenefitPaidAmount" : {
          "type" : "number"
        },
        "referenceNumber" : {
          "type" : "string"
        },
        "payToWho" : {
          "type" : "string"
        },
        "processedDateTime" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/claimResponseItem"
          }
        },
        "status" : {
          "type" : "string"
        }
      },
      "description" : "Register a Claim for a Policy"
    },
    "recoverPasswordRequest" : {
      "type" : "object",
      "required" : [ "username" ],
      "properties" : {
        "username" : {
          "type" : "string"
        }
      },
      "description" : "Request a password recovery"
    },
    "policyMember" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "pensionCardHolderInd" : {
          "type" : "boolean"
        },
        "individual" : {
          "$ref" : "#/definitions/individual"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "lhc" : {
          "$ref" : "#/definitions/lhc"
        },
        "type" : {
          "type" : "string",
          "default" : "members"
        },
        "partyType" : {
          "type" : "string"
        },
        "partyStatus" : {
          "type" : "string"
        },
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/memberRelationship"
          }
        },
        "joinDate" : {
          "type" : "string"
        },
        "beneficiary" : {
          "$ref" : "#/definitions/beneficiary"
        },
        "organization" : {
          "$ref" : "#/definitions/organization"
        },
        "contact" : {
          "$ref" : "#/definitions/contact"
        },
        "partyRole" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "memberTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "payment" : {
          "$ref" : "#/definitions/policyPayment"
        },
        "id" : {
          "type" : "string"
        },
        "suspension" : {
          "$ref" : "#/definitions/suspension"
        }
      },
      "title" : "policyMember",
      "description" : "A Policy Member"
    },
    "presentationLayerGroup" : {
      "type" : "object",
      "properties" : {
        "commonCoverages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/commonCoverage"
          }
        },
        "presentationLayerGroupCode" : {
          "type" : "string"
        },
        "displayOrder" : {
          "type" : "integer"
        },
        "coverTypeVersionLimitGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/coverTypeVersionLimitGroup"
          }
        },
        "parentGroup" : {
          "type" : "string"
        },
        "groupTier" : {
          "type" : "integer"
        }
      }
    },
    "registerUserRequest" : {
      "type" : "object",
      "required" : [ "dob", "email", "firstName", "lastName", "password", "policyNum" ],
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "emailOverride" : {
          "type" : "boolean"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "policyNum" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      },
      "description" : "Register a new user"
    },
    "coverType" : {
      "type" : "object",
      "properties" : {
        "presentationLayerGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/presentationLayerGroup"
          }
        },
        "coverTypeCode" : {
          "type" : "string"
        }
      }
    },
    "paymentResponse" : {
      "type" : "object",
      "required" : [ "amount", "cardHolderName", "cardToken", "desc", "policyRef", "responseCode", "settlementDate", "summaryCode", "type" ],
      "properties" : {
        "amount" : {
          "type" : "number"
        },
        "cardHolderName" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "orderNum" : {
          "type" : "string"
        },
        "settlementDate" : {
          "type" : "string",
          "format" : "date"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "summaryCode" : {
          "type" : "string"
        },
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "cardToken" : {
          "type" : "string"
        },
        "responseCode" : {
          "type" : "string"
        },
        "desc" : {
          "type" : "string"
        }
      }
    },
    "benefitLimits" : {
      "type" : "object",
      "properties" : {
        "coverType" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/coverType"
          }
        },
        "productOptionId" : {
          "type" : "string"
        },
        "effectiveDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        }
      },
      "description" : "Retrieve the benefit limits of a Business partner for a given policy and effective date"
    },
    "bonusBalance" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "balance" : {
          "type" : "number"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "contact" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "preferences" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/medium"
          }
        },
        "facsimile" : {
          "type" : "object",
          "properties" : {
            "countryCode" : {
              "type" : "string"
            },
            "faxNumber" : {
              "type" : "string"
            }
          }
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "homePhone" : {
          "$ref" : "#/definitions/phone"
        },
        "type" : {
          "type" : "string",
          "default" : "contact"
        },
        "preferredPhone" : {
          "type" : "string"
        },
        "mailingAddressSameAsResidential" : {
          "type" : "boolean"
        },
        "mobilePhone" : {
          "$ref" : "#/definitions/phone"
        },
        "mailingAddress" : {
          "$ref" : "#/definitions/address"
        },
        "sensitiveInformationProtection" : {
          "type" : "boolean"
        },
        "residentialAddress" : {
          "$ref" : "#/definitions/address"
        },
        "workPhone" : {
          "$ref" : "#/definitions/phone"
        },
        "id" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      },
      "title" : "Contact subresource"
    },
    "resetPasswordResponse" : {
      "type" : "object",
      "properties" : {
        "tokenID" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      },
      "description" : "Reset Password Response"
    },
    "claim" : {
      "type" : "object",
      "properties" : {
        "compensationDamage" : {
          "type" : "boolean"
        },
        "sourceChannel" : {
          "type" : "string"
        },
        "accountPaid" : {
          "type" : "string"
        },
        "discountAmount" : {
          "type" : "number"
        },
        "practiceTypeDescription" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "processedDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "practiceTypeCode" : {
          "type" : "string"
        },
        "referenceNumber" : {
          "type" : "string"
        },
        "pharmacyName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "payTo" : {
          "type" : "string"
        },
        "providerNumber" : {
          "type" : "string"
        },
        "providerName" : {
          "type" : "string"
        },
        "patientName" : {
          "type" : "string"
        },
        "providerAddressLine2" : {
          "type" : "string"
        },
        "providerAddressLine1" : {
          "type" : "string"
        },
        "totalPaidAmount" : {
          "type" : "number"
        },
        "providerAddressLine3" : {
          "type" : "string"
        },
        "providerPostcode" : {
          "type" : "string"
        },
        "totalChargeAmount" : {
          "type" : "number"
        },
        "providerRecordEndDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "bpId" : {
          "type" : "string"
        },
        "providerRecordStartDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "totalBonusPaidAmount" : {
          "type" : "number"
        },
        "submissionDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "memberChoiceProvider" : {
          "type" : "boolean"
        },
        "totalBenefitPaidAmount" : {
          "type" : "number"
        },
        "providerFirstName" : {
          "type" : "string"
        },
        "paymentMethod" : {
          "type" : "string"
        },
        "paymentDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "providerSuburb" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/claimsItem"
          }
        },
        "bonusClaim" : {
          "type" : "boolean"
        },
        "status" : {
          "type" : "string"
        },
        "beneficiaryId" : {
          "type" : "string"
        }
      }
    },
    "getProvider" : {
      "type" : "object",
      "properties" : {
        "personName" : {
          "$ref" : "#/definitions/name"
        },
        "orgName" : {
          "type" : "string"
        },
        "address" : {
          "$ref" : "#/definitions/address"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "validFromDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "id" : {
          "type" : "string"
        },
        "validToDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "practices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/practiceType"
          }
        },
        "memberChoice" : {
          "type" : "boolean"
        }
      },
      "description" : "Service Provider Structure"
    },
    "youngAdultsValidatePolicyResponse" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string",
          "description" : "First name of the verified parent."
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name of the verified parent."
        },
        "upToDate" : {
          "type" : "boolean",
          "description" : "A flag to indicate if the policy when all children are up to date."
        },
        "children" : {
          "type" : "array",
          "description" : "An array of dependents on the current policy who are within the 'Young Adult' age bracket.\n",
          "items" : {
            "$ref" : "#/definitions/youngAdultsForm"
          }
        },
        "isCorporate" : {
          "type" : "boolean",
          "description" : "A flag to indicate if the policy has a Master Policy attached."
        },
        "price" : {
          "type" : "object",
          "description" : "Provides current and expected (with FWAC scale applied) premium prices for a policy.\n",
          "title" : "Young Adults - Premium Price Information",
          "properties" : {
            "current" : {
              "type" : "number",
              "description" : "The current price already paid for the policy."
            },
            "adjusted" : {
              "type" : "number",
              "description" : "The expected price, once the FWAC scale has been applied."
            },
            "frequency" : {
              "type" : "string",
              "description" : "The existing payment frequency for the policy (e.g. 'MONTHLY')."
            }
          },
          "required" : [ "adjusted", "current", "frequency" ]
        },
        "registered" : {
          "type" : "boolean",
          "description" : "A flag to indicate if the parent is registered for OMS."
        },
        "id" : {
          "type" : "string",
          "description" : "Business Partner ID of the verified parent."
        },
        "isFWACScale" : {
          "type" : "boolean",
          "description" : "A flag to indicate if the policy is on a FWAC scale or not."
        },
        "isCompatible" : {
          "type" : "boolean",
          "description" : "A flag to indicate if the policy allows a FWAC scale change."
        }
      },
      "title" : "Young Adults - Validate Policy Response",
      "description" : "Response payload from validating a member and policy outside of an OMS login context."
    },
    "verifyTokenRequest" : {
      "type" : "object",
      "required" : [ "tokenID" ],
      "properties" : {
        "tokenID" : {
          "type" : "string"
        }
      },
      "description" : "Verify Token Request"
    },
    "bankAccount" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "bsb" : {
          "type" : "string"
        },
        "accountNum" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "accountHolderName" : {
          "type" : "string"
        }
      }
    },
    "pharmacyItem" : {
      "type" : "object",
      "properties" : {
        "drugGenericName" : {
          "type" : "string"
        },
        "itemDetails" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/pharmacyItemDetail"
          }
        },
        "drugBrandName" : {
          "type" : "string"
        }
      }
    },
    "recoverUsernameRequest" : {
      "type" : "object",
      "required" : [ "dob", "firstName", "lastName", "policyNum" ],
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "dob" : {
          "type" : "string",
          "format" : "date"
        },
        "policyNum" : {
          "type" : "string"
        }
      },
      "description" : "Recover the username associated with a Policy"
    },
    "individual" : {
      "type" : "object",
      "properties" : {
        "residencyStatus" : {
          "type" : "string"
        },
        "medicareIRN" : {
          "type" : "integer"
        },
        "gender" : {
          "type" : "string"
        },
        "medicareNumber" : {
          "type" : "string"
        },
        "medicareValidTo" : {
          "type" : "string",
          "format" : "date"
        },
        "name" : {
          "$ref" : "#/definitions/name"
        },
        "birthDate" : {
          "type" : "string",
          "format" : "date"
        }
      },
      "title" : "individual",
      "description" : "Representation of an individual as a policy member"
    },
    "resource" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "getServiceItems" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "providerId" : {
          "type" : "string"
        },
        "policyNumber" : {
          "type" : "string"
        },
        "practices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/practiceItem"
          }
        }
      },
      "description" : "Seach Service Items Structure"
    },
    "bonusBalances" : {
      "type" : "object",
      "properties" : {
        "bonusBalances" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/bonusBalance"
          }
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      },
      "title" : "bonusBalances"
    },
    "beneficiary" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "relationships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/memberRelationship"
          }
        },
        "individual" : {
          "$ref" : "#/definitions/individual"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "organization" : {
          "$ref" : "#/definitions/organization"
        },
        "contact" : {
          "$ref" : "#/definitions/contact"
        },
        "name" : {
          "$ref" : "#/definitions/name"
        },
        "memberTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "default" : "members"
        },
        "account" : {
          "$ref" : "#/definitions/paymentAccount"
        }
      },
      "description" : "A beneficiary"
    },
    "correspondenceRequestRequest" : {
      "type" : "object",
      "properties" : {
        "financialYear" : {
          "type" : "number"
        },
        "policyId" : {
          "type" : "string"
        },
        "deliveryMethod" : {
          "type" : "string"
        },
        "statementType" : {
          "type" : "string"
        }
      },
      "description" : "Sends a request for a correspondence document to be manually generated and delivered to the customer either by email or post\n"
    },
    "tokenResponse" : {
      "type" : "object",
      "required" : [ "token", "type" ],
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        }
      }
    },
    "memberRelationship" : {
      "type" : "object",
      "required" : [ "id", "type" ],
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "memberRef" : {
          "$ref" : "#/definitions/resource"
        },
        "id" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "default" : "members"
        },
        "employeeDepartment" : {
          "type" : "string"
        },
        "employeeNumber" : {
          "type" : "string"
        }
      },
      "description" : "Details of a related member (typically an employer)"
    },
    "credentialsResponse" : {
      "type" : "object",
      "properties" : {
        "tokenID" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      },
      "description" : "Set Credentials Response"
    },
    "name" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "middleName" : {
          "type" : "string"
        },
        "preferredName" : {
          "type" : "string"
        }
      },
      "title" : "name"
    },
    "agrIncomeTier" : {
      "type" : "object",
      "properties" : {
        "incomeType" : {
          "type" : "string"
        },
        "incomeTier" : {
          "type" : "string"
        }
      }
    },
    "youngAdultsUpdateRequest" : {
      "type" : "object",
      "properties" : {
        "children" : {
          "type" : "array",
          "description" : "An array of dependents on the current policy who are within the 'Young Adult' age bracket.",
          "items" : {
            "$ref" : "#/definitions/youngAdultsForm"
          }
        }
      },
      "title" : "Young Adults - Update members details request.",
      "description" : "Request payload for updating the Young Adult status and email address for child members."
    },
    "updatePaymentFrequencyRequest" : {
      "type" : "object",
      "properties" : {
        "paymentFrequency" : {
          "type" : "string"
        },
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date"
        },
        "deductionDay" : {
          "type" : "string"
        }
      },
      "description" : "Structure to Update Payment Frequency Details for a policy"
    },
    "itemAssessment" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "claimRequest" : {
      "type" : "object",
      "properties" : {
        "totalChargeAmount" : {
          "type" : "number"
        },
        "totalDiscountAmount" : {
          "type" : "number"
        },
        "accountPaid" : {
          "type" : "boolean"
        },
        "isBonusClaim" : {
          "type" : "boolean"
        },
        "patientMemberId" : {
          "type" : "string"
        },
        "policyRef" : {
          "$ref" : "#/definitions/resourceLink"
        },
        "practiceTypeCode" : {
          "type" : "string"
        },
        "referenceNumber" : {
          "type" : "string"
        },
        "pharmacyName" : {
          "type" : "string"
        },
        "notionalClaim" : {
          "type" : "boolean"
        },
        "category" : {
          "type" : "string"
        },
        "providerNumber" : {
          "type" : "string"
        },
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/submitClaimItem"
          }
        }
      },
      "description" : "Register a Claim for a Policy"
    },
    "medium" : {
      "type" : "object",
      "additionalProperties" : {
        "type" : "object",
        "properties" : {
          "updateable" : {
            "type" : "boolean"
          },
          "preference" : {
            "type" : "boolean"
          }
        }
      }
    },
    "error" : {
      "type" : "object",
      "required" : [ "errorCode", "errorDescription" ],
      "properties" : {
        "errorDescription" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        }
      },
      "title" : "error"
    },
    "changePasswordRequest" : {
      "type" : "object",
      "required" : [ "newPassword", "oldPassword" ],
      "properties" : {
        "oldPassword" : {
          "type" : "string"
        },
        "newPassword" : {
          "type" : "string"
        }
      },
      "description" : "Request a password change"
    },
    "sessionsUserCredentials" : {
      "type" : "object",
      "required" : [ "password", "username" ],
      "properties" : {
        "password" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      },
      "title" : "Sessions API - User credentials"
    },
    "provider" : {
      "type" : "object",
      "properties" : {
        "personName" : {
          "$ref" : "#/definitions/name"
        },
        "address" : {
          "$ref" : "#/definitions/address"
        },
        "orgName" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "validFromDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "id" : {
          "type" : "string"
        },
        "practices" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/practiceType"
          }
        },
        "validToDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "memberChoice" : {
          "type" : "boolean"
        }
      },
      "description" : "Service Provider Structure"
    },
    "agrRegistrationResponse" : {
      "type" : "object",
      "properties" : {
        "datePaidTo" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "premiums" : {
          "$ref" : "#/definitions/premiums"
        },
        "ausgovRebate" : {
          "$ref" : "#/definitions/ausgovRebate"
        },
        "paymentFrequency" : {
          "type" : "string"
        }
      }
    },
    "coverage" : {
      "type" : "object",
      "properties" : {
        "contractTypeSubClass" : {
          "type" : "string"
        },
        "coverTypeClassification" : {
          "type" : "string"
        },
        "coverTypeName" : {
          "type" : "string"
        },
        "coverTypeCode" : {
          "type" : "string"
        },
        "benefitStructure" : {
          "type" : "string"
        },
        "residencyType" : {
          "type" : "string"
        }
      }
    },
    "changeUsernameRequest" : {
      "type" : "object",
      "required" : [ "newUsername" ],
      "properties" : {
        "newUsername" : {
          "type" : "string"
        }
      },
      "description" : "Change a User's Username"
    },
    "agrRegistrationRequest" : {
      "type" : "object",
      "properties" : {
        "endDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "lodgementDate" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "members" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/agrApplicantMember"
          }
        },
        "agrIncomeTier" : {
          "$ref" : "#/definitions/agrIncomeTier"
        },
        "applicant" : {
          "$ref" : "#/definitions/applicant"
        }
      }
    },
    "confirmEmailResponse" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      },
      "description" : "Confirm Email Response - only next href is used"
    },
    "correspondenceContent" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "data" : {
          "type" : "string"
        },
        "size" : {
          "type" : "object",
          "properties" : {
            "unit" : {
              "type" : "string"
            },
            "value" : {
              "type" : "integer"
            }
          }
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "practiceType" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        }
      }
    },
    "correspondenceList" : {
      "type" : "object",
      "properties" : {
        "items" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/correspondenceItem"
          }
        }
      },
      "description" : "A collection of correspondence items"
    },
    "tokenRequest" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "errorURL" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "number"
        },
        "policyId" : {
          "type" : "string"
        },
        "successURL" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        }
      }
    },
    "activateUserResponse" : {
      "type" : "object",
      "properties" : {
        "tokenID" : {
          "type" : "string"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "id" : {
          "type" : "string"
        }
      },
      "description" : "Activate a User Response"
    },
    "getPolicyResponse" : {
      "type" : "object",
      "properties" : {
        "product" : {
          "$ref" : "#/definitions/product"
        },
        "_links" : {
          "type" : "object",
          "properties" : {
            "next" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "last" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "prev" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "self" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            },
            "first" : {
              "type" : "object",
              "properties" : {
                "href" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "masterPolicyID" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "default" : "policies"
        },
        "premium" : {
          "$ref" : "#/definitions/premium"
        },
        "members" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/policyMember"
          }
        },
        "paymentSchedule" : {
          "$ref" : "#/definitions/paymentSchedule"
        },
        "ausgovRebate" : {
          "$ref" : "#/definitions/ausgovRebate"
        },
        "id" : {
          "type" : "string"
        },
        "futurePolicy" : {
          "type" : "boolean"
        },
        "paidUpToDate" : {
          "type" : "string",
          "format" : "date"
        },
        "totalLHCLoading" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string"
        }
      },
      "title" : "policy"
    },
    "claimsHistory" : {
      "type" : "object",
      "properties" : {
        "moreRecordsPresent" : {
          "type" : "boolean"
        },
        "claims" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/claim"
          }
        }
      },
      "description" : "Retrieve the claims history for a given person in a policy for a period of time"
    },
    "claimResponseItem" : {
      "type" : "object",
      "properties" : {
        "benefitPaidAmount" : {
          "type" : "number"
        },
        "assessments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/claimResponseItemAssessment"
          }
        },
        "code" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "dateOfService" : {
          "type" : "string",
          "pattern" : "^[0-9]{4}-[0-9]{2}-[0-9]{2}"
        },
        "bonusPaidAmount" : {
          "type" : "number"
        },
        "status" : {
          "type" : "string"
        }
      }
    }
  }
}